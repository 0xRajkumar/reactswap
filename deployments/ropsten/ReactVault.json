{
  "address": "0xD27fee7E1174f50fb63fb325af0475576ef8bD24",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_receiptToken",
          "type": "address"
        },
        {
          "internalType": "contract IReactFarm",
          "name": "_farm",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastDepositedTime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "performanceFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "callFee",
          "type": "uint256"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_CALL_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PERFORMANCE_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAW_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAW_FEE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "available",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calculateHarvestReactRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calculateTotalPendingReactRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "callFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farm",
      "outputs": [
        {
          "internalType": "contract IReactFarm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestedTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiptToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_callFee",
          "type": "uint256"
        }
      ],
      "name": "setCallFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_performanceFee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawFeePeriod",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawFeePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastDepositedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reactAtLastUserAction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUserActionTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFeePeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3431be3ce858ea0ed9515c998fedeb54c957a808a6e64891e0749e347fe883c9",
  "receipt": {
    "to": null,
    "from": "0x88888887C3ebD4a33E34a15Db4254C74C75E5D4A",
    "contractAddress": "0xD27fee7E1174f50fb63fb325af0475576ef8bD24",
    "transactionIndex": 0,
    "gasUsed": "2092864",
    "logsBloom": "0x
    "blockHash": "0xf38325a79245cfc4687ee7d21e88ad61af6b193b3af6332b86d4d0c329917796",
    "transactionHash": "0x3431be3ce858ea0ed9515c998fedeb54c957a808a6e64891e0749e347fe883c9",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 11907888,
        "transactionHash": "0x3431be3ce858ea0ed9515c998fedeb54c957a808a6e64891e0749e347fe883c9",
        "address": "0xD27fee7E1174f50fb63fb325af0475576ef8bD24",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000088888887c3ebd4a33e34a15db4254c74c75e5d4a"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf38325a79245cfc4687ee7d21e88ad61af6b193b3af6332b86d4d0c329917796"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 11907888,
        "transactionHash": "0x3431be3ce858ea0ed9515c998fedeb54c957a808a6e64891e0749e347fe883c9",
        "address": "0x2925293d027391eD3CC24bf4a4B80D072FCBB714",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000d27fee7e1174f50fb63fb325af0475576ef8bd24",
          "0x0000000000000000000000003ec9060e52b9b435db7fdec55ca33b8bcbaf2d2b"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 1,
        "blockHash": "0xf38325a79245cfc4687ee7d21e88ad61af6b193b3af6332b86d4d0c329917796"
      }
    ],
    "blockNumber": 11907888,
    "cumulativeGasUsed": "2092864",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2925293d027391eD3CC24bf4a4B80D072FCBB714",
    "0x74ce4292557bC5e7a86749F84117EAe8706C3D85",
    "0x3EC9060E52b9B435Db7fDeC55CA33B8bcBaF2D2b",
    "0x88888887C3ebD4a33E34a15Db4254C74C75E5D4A",
    "0x88888887C3ebD4a33E34a15Db4254C74C75E5D4A"
  ],
  "solcInputHash": "dac350dcdb2b51afef353dcc77743026",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_receiptToken\",\"type\":\"address\"},{\"internalType\":\"contract IReactFarm\",\"name\":\"_farm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"performanceFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callFee\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_CALL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERFORMANCE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_FEE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateHarvestReactRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateTotalPendingReactRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farm\",\"outputs\":[{\"internalType\":\"contract IReactFarm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHarvestedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiptToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_callFee\",\"type\":\"uint256\"}],\"name\":\"setCallFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_performanceFee\",\"type\":\"uint256\"}],\"name\":\"setPerformanceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFeePeriod\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFeePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reactAtLastUserAction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUserActionTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"available()\":{\"details\":\"The contract puts 100% of the tokens to work.\"},\"balanceOf()\":{\"details\":\"It includes tokens held by the contract and held in MasterChef\"},\"calculateHarvestReactRewards()\":{\"returns\":{\"_0\":\"Expected reward to collect in REACT\"}},\"calculateTotalPendingReactRewards()\":{\"returns\":{\"_0\":\"Returns total pending react rewards\"}},\"constructor\":{\"params\":{\"_admin\":\": address of the admin\",\"_farm\":\": MasterChef contract\",\"_receiptToken\":\": Syrup token contract\",\"_token\":\": React token contract\",\"_treasury\":\": address of the treasury (collects fees)\"}},\"deposit(uint256)\":{\"details\":\"Only possible when contract not paused.\",\"params\":{\"_amount\":\": number of tokens to deposit (in REACT)\"}},\"emergencyWithdraw()\":{\"details\":\"EMERGENCY ONLY. Only callable by the contract admin.\"},\"harvest()\":{\"details\":\"Only possible when contract not paused.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only possible when contract not paused.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdmin(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setCallFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setPerformanceFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setTreasury(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setWithdrawFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setWithdrawFeePeriod(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only possible when contract is paused.\"},\"withdraw(uint256)\":{\"params\":{\"_shares\":\": Number of shares to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"available()\":{\"notice\":\"Custom logic for how much the vault allows to be borrowed\"},\"balanceOf()\":{\"notice\":\"Calculates the total underlying tokens\"},\"calculateHarvestReactRewards()\":{\"notice\":\"Calculates the expected harvest reward from third party\"},\"calculateTotalPendingReactRewards()\":{\"notice\":\"Calculates the total pending rewards that can be restaked\"},\"constructor\":{\"notice\":\"Constructor\"},\"deposit(uint256)\":{\"notice\":\"Deposits funds into the React Vault\"},\"emergencyWithdraw()\":{\"notice\":\"Withdraws from MasterChef to Vault without caring about rewards.\"},\"getPricePerFullShare()\":{\"notice\":\"Calculates the price per share\"},\"harvest()\":{\"notice\":\"Reinvests REACT tokens into MasterChef\"},\"inCaseTokensGetStuck(address)\":{\"notice\":\"Withdraw unexpected tokens sent to the React Vault\"},\"pause()\":{\"notice\":\"Triggers stopped state\"},\"setAdmin(address)\":{\"notice\":\"Sets admin address\"},\"setCallFee(uint256)\":{\"notice\":\"Sets call fee\"},\"setPerformanceFee(uint256)\":{\"notice\":\"Sets performance fee\"},\"setTreasury(address)\":{\"notice\":\"Sets treasury address\"},\"setWithdrawFee(uint256)\":{\"notice\":\"Sets withdraw fee\"},\"setWithdrawFeePeriod(uint256)\":{\"notice\":\"Sets withdraw fee period\"},\"unpause()\":{\"notice\":\"Returns to normal state\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws from funds from the React Vault\"},\"withdrawAll()\":{\"notice\":\"Withdraws all funds for a user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReactVault.sol\":\"ReactVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\"},\"contracts/ReactVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\ninterface IReactFarm {\\n    function deposit(uint256 _pid, uint256 _amount) external;\\n    function withdraw(uint256 _pid, uint256 _amount) external;\\n    function enterStaking(uint256 _amount) external;\\n    function leaveStaking(uint256 _amount) external;\\n    function pendingReact(uint256 _pid, address _user) external view returns (uint256);\\n    function userInfo(uint256 _pid, address _user) external view returns (uint256, uint256);\\n    function emergencyWithdraw(uint256 _pid) external;\\n}\\n\\ncontract ReactVault is Ownable, Pausable {\\n    using SafeERC20 for IERC20;\\n    using SafeMath for uint256;\\n\\n    struct UserInfo {\\n        uint256 shares; // number of shares for a user\\n        uint256 lastDepositedTime; // keeps track of deposited time for potential penalty\\n        uint256 reactAtLastUserAction; // keeps track of react deposited at the last user action\\n        uint256 lastUserActionTime; // keeps track of the last user action time\\n    }\\n\\n    IERC20 public immutable token; // React token\\n    IERC20 public immutable receiptToken; // Syrup token\\n\\n    IReactFarm public immutable farm;\\n\\n    mapping(address => UserInfo) public userInfo;\\n\\n    uint256 public totalShares;\\n    uint256 public lastHarvestedTime;\\n    address public admin;\\n    address public treasury;\\n\\n    uint256 public constant MAX_PERFORMANCE_FEE = 500; // 5%\\n    uint256 public constant MAX_CALL_FEE = 100; // 1%\\n    uint256 public constant MAX_WITHDRAW_FEE = 100; // 1%\\n    uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 72 hours; // 3 days\\n\\n    uint256 public performanceFee = 200; // 2%\\n    uint256 public callFee = 25; // 0.25%\\n    uint256 public withdrawFee = 10; // 0.1%\\n    uint256 public withdrawFeePeriod = 72 hours; // 3 days\\n\\n    event Deposit(address indexed sender, uint256 amount, uint256 shares, uint256 lastDepositedTime);\\n    event Withdraw(address indexed sender, uint256 amount, uint256 shares);\\n    event Harvest(address indexed sender, uint256 performanceFee, uint256 callFee);\\n    event Pause();\\n    event Unpause();\\n\\n    /**\\n     * @notice Constructor\\n     * @param _token: React token contract\\n     * @param _receiptToken: Syrup token contract\\n     * @param _farm: MasterChef contract\\n     * @param _admin: address of the admin\\n     * @param _treasury: address of the treasury (collects fees)\\n     */\\n    constructor(\\n        IERC20 _token,\\n        IERC20 _receiptToken,\\n        IReactFarm _farm,\\n        address _admin,\\n        address _treasury\\n    ) public {\\n        token = _token;\\n        receiptToken = _receiptToken;\\n        farm = _farm;\\n        admin = _admin;\\n        treasury = _treasury;\\n\\n        // Infinite approve\\n        IERC20(_token).safeApprove(address(_farm), type(uint256).max);\\n    }\\n\\n    /**\\n     * @notice Checks if the msg.sender is the admin address\\n     */\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"admin: wut?\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Checks if the msg.sender is a contract or a proxy\\n     */\\n    modifier notContract() {\\n        require(!_isContract(msg.sender), \\\"contract not allowed\\\");\\n        require(msg.sender == tx.origin, \\\"proxy contract not allowed\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Deposits funds into the React Vault\\n     * @dev Only possible when contract not paused.\\n     * @param _amount: number of tokens to deposit (in REACT)\\n     */\\n    function deposit(uint256 _amount) external whenNotPaused notContract {\\n        require(_amount > 0, \\\"Nothing to deposit\\\");\\n\\n        uint256 pool = balanceOf();\\n        token.safeTransferFrom(msg.sender, address(this), _amount);\\n        uint256 currentShares = 0;\\n        if (totalShares != 0) {\\n            currentShares = (_amount.mul(totalShares)).div(pool);\\n        } else {\\n            currentShares = _amount;\\n        }\\n        UserInfo storage user = userInfo[msg.sender];\\n\\n        user.shares = user.shares.add(currentShares);\\n        user.lastDepositedTime = block.timestamp;\\n\\n        totalShares = totalShares.add(currentShares);\\n\\n        user.reactAtLastUserAction = user.shares.mul(balanceOf()).div(totalShares);\\n        user.lastUserActionTime = block.timestamp;\\n\\n        _earn();\\n\\n        emit Deposit(msg.sender, _amount, currentShares, block.timestamp);\\n    }\\n\\n    /**\\n     * @notice Withdraws all funds for a user\\n     */\\n    function withdrawAll() external notContract {\\n        withdraw(userInfo[msg.sender].shares);\\n    }\\n\\n    /**\\n     * @notice Reinvests REACT tokens into MasterChef\\n     * @dev Only possible when contract not paused.\\n     */\\n    function harvest() external notContract whenNotPaused {\\n        IReactFarm(farm).leaveStaking(0);\\n\\n        uint256 bal = available();\\n        uint256 currentPerformanceFee = bal.mul(performanceFee).div(10000);\\n        token.safeTransfer(treasury, currentPerformanceFee);\\n\\n        uint256 currentCallFee = bal.mul(callFee).div(10000);\\n        token.safeTransfer(msg.sender, currentCallFee);\\n\\n        _earn();\\n\\n        lastHarvestedTime = block.timestamp;\\n\\n        emit Harvest(msg.sender, currentPerformanceFee, currentCallFee);\\n    }\\n\\n    /**\\n     * @notice Sets admin address\\n     * @dev Only callable by the contract owner.\\n     */\\n    function setAdmin(address _admin) external onlyOwner {\\n        require(_admin != address(0), \\\"Cannot be zero address\\\");\\n        admin = _admin;\\n    }\\n\\n    /**\\n     * @notice Sets treasury address\\n     * @dev Only callable by the contract owner.\\n     */\\n    function setTreasury(address _treasury) external onlyOwner {\\n        require(_treasury != address(0), \\\"Cannot be zero address\\\");\\n        treasury = _treasury;\\n    }\\n\\n    /**\\n     * @notice Sets performance fee\\n     * @dev Only callable by the contract admin.\\n     */\\n    function setPerformanceFee(uint256 _performanceFee) external onlyAdmin {\\n        require(_performanceFee <= MAX_PERFORMANCE_FEE, \\\"performanceFee cannot be more than MAX_PERFORMANCE_FEE\\\");\\n        performanceFee = _performanceFee;\\n    }\\n\\n    /**\\n     * @notice Sets call fee\\n     * @dev Only callable by the contract admin.\\n     */\\n    function setCallFee(uint256 _callFee) external onlyAdmin {\\n        require(_callFee <= MAX_CALL_FEE, \\\"callFee cannot be more than MAX_CALL_FEE\\\");\\n        callFee = _callFee;\\n    }\\n\\n    /**\\n     * @notice Sets withdraw fee\\n     * @dev Only callable by the contract admin.\\n     */\\n    function setWithdrawFee(uint256 _withdrawFee) external onlyAdmin {\\n        require(_withdrawFee <= MAX_WITHDRAW_FEE, \\\"withdrawFee cannot be more than MAX_WITHDRAW_FEE\\\");\\n        withdrawFee = _withdrawFee;\\n    }\\n\\n    /**\\n     * @notice Sets withdraw fee period\\n     * @dev Only callable by the contract admin.\\n     */\\n    function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyAdmin {\\n        require(\\n            _withdrawFeePeriod <= MAX_WITHDRAW_FEE_PERIOD,\\n            \\\"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\\\"\\n        );\\n        withdrawFeePeriod = _withdrawFeePeriod;\\n    }\\n\\n    /**\\n     * @notice Withdraws from MasterChef to Vault without caring about rewards.\\n     * @dev EMERGENCY ONLY. Only callable by the contract admin.\\n     */\\n    function emergencyWithdraw() external onlyAdmin {\\n        IReactFarm(farm).emergencyWithdraw(0);\\n    }\\n\\n    /**\\n     * @notice Withdraw unexpected tokens sent to the React Vault\\n     */\\n    function inCaseTokensGetStuck(address _token) external onlyAdmin {\\n        require(_token != address(token), \\\"Token cannot be same as deposit token\\\");\\n        require(_token != address(receiptToken), \\\"Token cannot be same as receipt token\\\");\\n\\n        uint256 amount = IERC20(_token).balanceOf(address(this));\\n        IERC20(_token).safeTransfer(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @notice Triggers stopped state\\n     * @dev Only possible when contract not paused.\\n     */\\n    function pause() external onlyAdmin whenNotPaused {\\n        _pause();\\n        emit Pause();\\n    }\\n\\n    /**\\n     * @notice Returns to normal state\\n     * @dev Only possible when contract is paused.\\n     */\\n    function unpause() external onlyAdmin whenPaused {\\n        _unpause();\\n        emit Unpause();\\n    }\\n\\n    /**\\n     * @notice Calculates the expected harvest reward from third party\\n     * @return Expected reward to collect in REACT\\n     */\\n    function calculateHarvestReactRewards() external view returns (uint256) {\\n        uint256 amount = IReactFarm(farm).pendingReact(0, address(this));\\n        amount = amount.add(available());\\n        uint256 currentCallFee = amount.mul(callFee).div(10000);\\n\\n        return currentCallFee;\\n    }\\n\\n    /**\\n     * @notice Calculates the total pending rewards that can be restaked\\n     * @return Returns total pending react rewards\\n     */\\n    function calculateTotalPendingReactRewards() external view returns (uint256) {\\n        uint256 amount = IReactFarm(farm).pendingReact(0, address(this));\\n        amount = amount.add(available());\\n\\n        return amount;\\n    }\\n\\n    /**\\n     * @notice Calculates the price per share\\n     */\\n    function getPricePerFullShare() external view returns (uint256) {\\n        return totalShares == 0 ? 1e18 : balanceOf().mul(1e18).div(totalShares);\\n    }\\n\\n    /**\\n     * @notice Withdraws from funds from the React Vault\\n     * @param _shares: Number of shares to withdraw\\n     */\\n    function withdraw(uint256 _shares) public notContract {\\n        UserInfo storage user = userInfo[msg.sender];\\n        require(_shares > 0, \\\"Nothing to withdraw\\\");\\n        require(_shares <= user.shares, \\\"Withdraw amount exceeds balance\\\");\\n\\n        uint256 currentAmount = (balanceOf().mul(_shares)).div(totalShares);\\n        user.shares = user.shares.sub(_shares);\\n        totalShares = totalShares.sub(_shares);\\n\\n        uint256 bal = available();\\n        if (bal < currentAmount) {\\n            uint256 balWithdraw = currentAmount.sub(bal);\\n            IReactFarm(farm).leaveStaking(balWithdraw);\\n            uint256 balAfter = available();\\n            uint256 diff = balAfter.sub(bal);\\n            if (diff < balWithdraw) {\\n                currentAmount = bal.add(diff);\\n            }\\n        }\\n\\n        if (block.timestamp < user.lastDepositedTime.add(withdrawFeePeriod)) {\\n            uint256 currentWithdrawFee = currentAmount.mul(withdrawFee).div(10000);\\n            token.safeTransfer(treasury, currentWithdrawFee);\\n            currentAmount = currentAmount.sub(currentWithdrawFee);\\n        }\\n\\n        if (user.shares > 0) {\\n            user.reactAtLastUserAction = user.shares.mul(balanceOf()).div(totalShares);\\n        } else {\\n            user.reactAtLastUserAction = 0;\\n        }\\n\\n        user.lastUserActionTime = block.timestamp;\\n\\n        token.safeTransfer(msg.sender, currentAmount);\\n\\n        emit Withdraw(msg.sender, currentAmount, _shares);\\n    }\\n\\n    /**\\n     * @notice Custom logic for how much the vault allows to be borrowed\\n     * @dev The contract puts 100% of the tokens to work.\\n     */\\n    function available() public view returns (uint256) {\\n        return token.balanceOf(address(this));\\n    }\\n\\n    /**\\n     * @notice Calculates the total underlying tokens\\n     * @dev It includes tokens held by the contract and held in MasterChef\\n     */\\n    function balanceOf() public view returns (uint256) {\\n        (uint256 amount, ) = IReactFarm(farm).userInfo(0, address(this));\\n        return token.balanceOf(address(this)).add(amount);\\n    }\\n\\n    /**\\n     * @notice Deposits tokens into MasterChef to earn staking rewards\\n     */\\n    function _earn() internal {\\n        uint256 bal = available();\\n        if (bal > 0) {\\n            IReactFarm(farm).enterStaking(bal);\\n        }\\n    }\\n\\n    /**\\n     * @notice Checks if address is a contract\\n     * @dev It prevents contract from being targetted\\n     */\\n    function _isContract(address addr) internal view returns (bool) {\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(addr)\\n        }\\n        return size > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x2a712701b62a1dc82ac1ff0b5d0bfcc1077913d8e44f311980312b68f9c9a863\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e060405260c86006556019600755600a6008556203f4806009553480156200002757600080fd5b50604051620027fd380380620027fd8339810160408190526200004a916200051c565b6200005533620000dd565b6000805460ff60a01b191690556001600160601b0319606086811b821660805285811b821660a05284901b1660c052600480546001600160a01b038481166001600160a01b031992831617909255600580548484169216919091179055620000d2908616846000196200181c6200012d602090811b91909117901c565b505050505062000653565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b801580620001bb5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156200017e57600080fd5b505afa15801562000193573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b991906200059b565b155b620002335760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b179091526200028b9185916200029016565b505050565b6000620002ec826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200036e60201b62001978179092919060201c565b8051909150156200028b57808060200190518101906200030d9190620004fa565b6200028b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200022a565b60606200037f848460008562000389565b90505b9392505050565b606082471015620003ec5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200022a565b843b6200043c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200022a565b600080866001600160a01b031685876040516200045a9190620005b4565b60006040518083038185875af1925050503d806000811462000499576040519150601f19603f3d011682016040523d82523d6000602084013e6200049e565b606091505b509092509050620004b1828286620004bc565b979650505050505050565b60608315620004cd57508162000382565b825115620004de5782518084602001fd5b8160405162461bcd60e51b81526004016200022a9190620005d2565b6000602082840312156200050c578081fd5b8151801515811462000382578182fd5b600080600080600060a0868803121562000534578081fd5b855162000541816200063a565b602087015190955062000554816200063a565b604087015190945062000567816200063a565b60608701519093506200057a816200063a565b60808701519092506200058d816200063a565b809150509295509295909350565b600060208284031215620005ad578081fd5b5051919050565b60008251620005c881846020870162000607565b9190910192915050565b6000602082528251806020840152620005f381604085016020870162000607565b601f01601f19169190910160400192915050565b60005b83811015620006245781810151838201526020016200060a565b8381111562000634576000848401525b50505050565b6001600160a01b03811681146200065057600080fd5b50565b60805160601c60a05160601c60c05160601c612101620006fc60003960008181610305015281816105240152818161087501528181610b7101528181610f130152818161117e015281816114a20152611abc01526000818161047901526115c40152600081816104d901528181610955015281816109d101528181610c1201528181610c6701528181610cf201528181610fb30152818161136a015261153401526121016000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80638456cb591161013b578063d4b0de2f116100b8578063ec78e8321161007c578063ec78e83214610474578063f0f442601461049b578063f2fde38b146104ae578063f851a440146104c1578063fc0c546a146104d45761023d565b8063d4b0de2f146102db578063db2e21bc14610447578063def68a9c1461044f578063df10b4e614610462578063e941fa781461046b5761023d565b8063ae1c8117116100ff578063ae1c811714610407578063b60f05311461040f578063b6ac642a14610418578063b6b55f251461042b578063bdca91651461043e5761023d565b80638456cb59146103d4578063853828b6146103dc57806387788782146103e45780638da5cb5b146103ed57806390321e1a146103fe5761023d565b80633f4ba83a116101c9578063704b6c021161018d578063704b6c021461039657806370897b23146103a9578063715018a6146103bc578063722713f7146103c457806377c7b8fc146103cc5761023d565b80633f4ba83a146103485780634641257d1461035057806348a0d754146103585780635c975abb1461036057806361d027b3146103835761023d565b80632ad5a53f116102105780632ad5a53f146102db5780632cfc5f01146102e35780632e1a7d4d146102ed57806336e9332d146103005780633a98ef391461033f5761023d565b80631959a002146102425780631a6e9d9c1461029d5780631efac1b8146102b357806326465826146102c8575b600080fd5b610278610250366004611e49565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6102a56104fb565b604051908152602001610294565b6102c66102c1366004611e90565b6105de565b005b6102c66102d6366004611e90565b61068f565b6102a5606481565b6102a56203f48081565b6102c66102fb366004611e90565b610720565b6103277f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610294565b6102a560025481565b6102c6610a3a565b6102c6610aed565b6102a5610cda565b610373600054600160a01b900460ff1690565b6040519015158152602001610294565b600554610327906001600160a01b031681565b6102c66103a4366004611e49565b610d79565b6102c66103b7366004611e90565b610e14565b6102c6610eb4565b6102a5610eea565b6102a5611039565b6102c6611071565b6102c66110fe565b6102a560065481565b6000546001600160a01b0316610327565b6102a560075481565b6102a5611155565b6102a560035481565b6102c6610426366004611e90565b611205565b6102c6610439366004611e90565b61129e565b6102a56101f481565b6102c6611462565b6102c661045d366004611e49565b611508565b6102a560095481565b6102a560085481565b6103277f000000000000000000000000000000000000000000000000000000000000000081565b6102c66104a9366004611e49565b6116e6565b6102c66104bc366004611e49565b611781565b600454610327906001600160a01b031681565b6103277f000000000000000000000000000000000000000000000000000000000000000081565b6040516343c8eaab60e11b81526000600482018190523060248301529081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638791d5569060440160206040518083038186803b15801561056657600080fd5b505afa15801561057a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059e9190611ea8565b90506105b26105ab610cda565b8290611991565b905060006105d76127106105d16007548561199d90919063ffffffff16565b906119a9565b9250505090565b6004546001600160a01b031633146106115760405162461bcd60e51b815260040161060890611ff6565b60405180910390fd5b6203f48081111561068a5760405162461bcd60e51b815260206004820152603d60248201527f7769746864726177466565506572696f642063616e6e6f74206265206d6f726560448201527f207468616e204d41585f57495448445241575f4645455f504552494f440000006064820152608401610608565b600955565b6004546001600160a01b031633146106b95760405162461bcd60e51b815260040161060890611ff6565b606481111561071b5760405162461bcd60e51b815260206004820152602860248201527f63616c6c4665652063616e6e6f74206265206d6f7265207468616e204d41585f60448201526743414c4c5f46454560c01b6064820152608401610608565b600755565b333b1561073f5760405162461bcd60e51b815260040161060890611fc8565b33321461075e5760405162461bcd60e51b815260040161060890611f32565b336000908152600160205260409020816107b05760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b6044820152606401610608565b80548211156108015760405162461bcd60e51b815260206004820152601f60248201527f576974686472617720616d6f756e7420657863656564732062616c616e6365006044820152606401610608565b600061081b6002546105d185610815610eea565b9061199d565b825490915061082a90846119b5565b825560025461083990846119b5565b6002556000610846610cda565b90508181101561090c57600061085c83836119b5565b604051631058d28160e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631058d28190602401600060405180830381600087803b1580156108c157600080fd5b505af11580156108d5573d6000803e3d6000fd5b5050505060006108e3610cda565b905060006108f182856119b5565b905082811015610908576109058482611991565b94505b5050505b600954600184015461091d91611991565b42101561098c5760006109416127106105d16008548661199d90919063ffffffff16565b60055490915061097e906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836119c1565b61098883826119b5565b9250505b8254156109b6576109ac6002546105d16109a4610eea565b86549061199d565b60028401556109be565b600060028401555b4260038401556109f86001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846119c1565b604080518381526020810186905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56891015b60405180910390a250505050565b6004546001600160a01b03163314610a645760405162461bcd60e51b815260040161060890611ff6565b610a77600054600160a01b900460ff1690565b610aba5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610608565b610ac26119f1565b6040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b333b15610b0c5760405162461bcd60e51b815260040161060890611fc8565b333214610b2b5760405162461bcd60e51b815260040161060890611f32565b610b3e600054600160a01b900460ff1690565b15610b5b5760405162461bcd60e51b815260040161060890611f69565b604051631058d28160e01b8152600060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631058d28190602401600060405180830381600087803b158015610bbd57600080fd5b505af1158015610bd1573d6000803e3d6000fd5b505050506000610bdf610cda565b90506000610bfe6127106105d16006548561199d90919063ffffffff16565b600554909150610c3b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836119c1565b6000610c586127106105d16007548661199d90919063ffffffff16565b9050610c8e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836119c1565b610c96611a94565b42600355604080518381526020810183905233917f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954910160405180910390a2505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610d3c57600080fd5b505afa158015610d50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d749190611ea8565b905090565b6000546001600160a01b03163314610da35760405162461bcd60e51b815260040161060890611f93565b6001600160a01b038116610df25760405162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b6044820152606401610608565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03163314610e3e5760405162461bcd60e51b815260040161060890611ff6565b6101f4811115610eaf5760405162461bcd60e51b815260206004820152603660248201527f706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468604482015275616e204d41585f504552464f524d414e43455f46454560501b6064820152608401610608565b600655565b6000546001600160a01b03163314610ede5760405162461bcd60e51b815260040161060890611f93565b610ee86000611b23565b565b6040516393f1a40b60e01b81526000600482018190523060248301529081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393f1a40b90604401604080518083038186803b158015610f5457600080fd5b505afa158015610f68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8c9190611ec0565b506040516370a0823160e01b81523060048201529091506110339082906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610ff557600080fd5b505afa158015611009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102d9190611ea8565b90611991565b91505090565b60006002546000146110645761105f6002546105d1670de0b6b3a7640000610815610eea565b610d74565b50670de0b6b3a764000090565b6004546001600160a01b0316331461109b5760405162461bcd60e51b815260040161060890611ff6565b6110ae600054600160a01b900460ff1690565b156110cb5760405162461bcd60e51b815260040161060890611f69565b6110d3611b73565b6040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b333b1561111d5760405162461bcd60e51b815260040161060890611fc8565b33321461113c5760405162461bcd60e51b815260040161060890611f32565b33600090815260016020526040902054610ee890610720565b6040516343c8eaab60e11b81526000600482018190523060248301529081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638791d5569060440160206040518083038186803b1580156111c057600080fd5b505afa1580156111d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f89190611ea8565b90506110336105ab610cda565b6004546001600160a01b0316331461122f5760405162461bcd60e51b815260040161060890611ff6565b60648111156112995760405162461bcd60e51b815260206004820152603060248201527f77697468647261774665652063616e6e6f74206265206d6f7265207468616e2060448201526f4d41585f57495448445241575f46454560801b6064820152608401610608565b600855565b6112b1600054600160a01b900460ff1690565b156112ce5760405162461bcd60e51b815260040161060890611f69565b333b156112ed5760405162461bcd60e51b815260040161060890611fc8565b33321461130c5760405162461bcd60e51b815260040161060890611f32565b600081116113515760405162461bcd60e51b8152602060048201526012602482015271139bdd1a1a5b99c81d1bc819195c1bdcda5d60721b6044820152606401610608565b600061135b610eea565b90506113926001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611bde565b60006002546000146113be576113b7826105d16002548661199d90919063ffffffff16565b90506113c1565b50815b33600090815260016020526040902080546113dc9083611991565b81554260018201556002546113f19083611991565b600281905561140d906105d1611405610eea565b84549061199d565b6002820155426003820155611420611a94565b6040805185815260208101849052429181019190915233907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e90606001610a2c565b6004546001600160a01b0316331461148c5760405162461bcd60e51b815260040161060890611ff6565b604051632989754760e11b8152600060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635312ea8e90602401600060405180830381600087803b1580156114ee57600080fd5b505af1158015611502573d6000803e3d6000fd5b50505050565b6004546001600160a01b031633146115325760405162461bcd60e51b815260040161060890611ff6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614156115c25760405162461bcd60e51b815260206004820152602560248201527f546f6b656e2063616e6e6f742062652073616d65206173206465706f736974206044820152643a37b5b2b760d91b6064820152608401610608565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614156116525760405162461bcd60e51b815260206004820152602560248201527f546f6b656e2063616e6e6f742062652073616d652061732072656365697074206044820152643a37b5b2b760d91b6064820152608401610608565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561169457600080fd5b505afa1580156116a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cc9190611ea8565b90506116e26001600160a01b03831633836119c1565b5050565b6000546001600160a01b031633146117105760405162461bcd60e51b815260040161060890611f93565b6001600160a01b03811661175f5760405162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b6044820152606401610608565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146117ab5760405162461bcd60e51b815260040161060890611f93565b6001600160a01b0381166118105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610608565b61181981611b23565b50565b8015806118a55750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561186b57600080fd5b505afa15801561187f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a39190611ea8565b155b6119105760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610608565b6040516001600160a01b03831660248201526044810182905261197390849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c16565b505050565b60606119878484600085611ce8565b90505b9392505050565b600061198a828461201b565b600061198a8284612053565b600061198a8284612033565b600061198a8284612072565b6040516001600160a01b03831660248201526044810182905261197390849063a9059cbb60e01b9060640161193c565b611a04600054600160a01b900460ff1690565b611a475760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610608565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000611a9e610cda565b90508015611819576040516341441d3b60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906341441d3b90602401600060405180830381600087803b158015611b0857600080fd5b505af1158015611b1c573d6000803e3d6000fd5b5050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611b86600054600160a01b900460ff1690565b15611ba35760405162461bcd60e51b815260040161060890611f69565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a773390565b6040516001600160a01b03808516602483015283166044820152606481018290526115029085906323b872dd60e01b9060840161193c565b6000611c6b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119789092919063ffffffff16565b8051909150156119735780806020019051810190611c899190611e70565b6119735760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610608565b606082471015611d495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610608565b843b611d975760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610608565b600080866001600160a01b03168587604051611db39190611ee3565b60006040518083038185875af1925050503d8060008114611df0576040519150601f19603f3d011682016040523d82523d6000602084013e611df5565b606091505b5091509150611e05828286611e10565b979650505050505050565b60608315611e1f57508161198a565b825115611e2f5782518084602001fd5b8160405162461bcd60e51b81526004016106089190611eff565b600060208284031215611e5a578081fd5b81356001600160a01b038116811461198a578182fd5b600060208284031215611e81578081fd5b8151801515811461198a578182fd5b600060208284031215611ea1578081fd5b5035919050565b600060208284031215611eb9578081fd5b5051919050565b60008060408385031215611ed2578081fd5b505080516020909101519092909150565b60008251611ef5818460208701612089565b9190910192915050565b6000602082528251806020840152611f1e816040850160208701612089565b601f01601f19169190910160400192915050565b6020808252601a908201527f70726f787920636f6e7472616374206e6f7420616c6c6f776564000000000000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526014908201527318dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604082015260600190565b6020808252600b908201526a61646d696e3a207775743f60a81b604082015260600190565b6000821982111561202e5761202e6120b5565b500190565b60008261204e57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561206d5761206d6120b5565b500290565b600082821015612084576120846120b5565b500390565b60005b838110156120a457818101518382015260200161208c565b838111156115025750506000910152565b634e487b7160e01b600052601160045260246000fdfea264697066735822122085ba9d6728ca9dc4666daa510cab7f989551304dd616839799663328e78afde364736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061023d5760003560e01c80638456cb591161013b578063d4b0de2f116100b8578063ec78e8321161007c578063ec78e83214610474578063f0f442601461049b578063f2fde38b146104ae578063f851a440146104c1578063fc0c546a146104d45761023d565b8063d4b0de2f146102db578063db2e21bc14610447578063def68a9c1461044f578063df10b4e614610462578063e941fa781461046b5761023d565b8063ae1c8117116100ff578063ae1c811714610407578063b60f05311461040f578063b6ac642a14610418578063b6b55f251461042b578063bdca91651461043e5761023d565b80638456cb59146103d4578063853828b6146103dc57806387788782146103e45780638da5cb5b146103ed57806390321e1a146103fe5761023d565b80633f4ba83a116101c9578063704b6c021161018d578063704b6c021461039657806370897b23146103a9578063715018a6146103bc578063722713f7146103c457806377c7b8fc146103cc5761023d565b80633f4ba83a146103485780634641257d1461035057806348a0d754146103585780635c975abb1461036057806361d027b3146103835761023d565b80632ad5a53f116102105780632ad5a53f146102db5780632cfc5f01146102e35780632e1a7d4d146102ed57806336e9332d146103005780633a98ef391461033f5761023d565b80631959a002146102425780631a6e9d9c1461029d5780631efac1b8146102b357806326465826146102c8575b600080fd5b610278610250366004611e49565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6102a56104fb565b604051908152602001610294565b6102c66102c1366004611e90565b6105de565b005b6102c66102d6366004611e90565b61068f565b6102a5606481565b6102a56203f48081565b6102c66102fb366004611e90565b610720565b6103277f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610294565b6102a560025481565b6102c6610a3a565b6102c6610aed565b6102a5610cda565b610373600054600160a01b900460ff1690565b6040519015158152602001610294565b600554610327906001600160a01b031681565b6102c66103a4366004611e49565b610d79565b6102c66103b7366004611e90565b610e14565b6102c6610eb4565b6102a5610eea565b6102a5611039565b6102c6611071565b6102c66110fe565b6102a560065481565b6000546001600160a01b0316610327565b6102a560075481565b6102a5611155565b6102a560035481565b6102c6610426366004611e90565b611205565b6102c6610439366004611e90565b61129e565b6102a56101f481565b6102c6611462565b6102c661045d366004611e49565b611508565b6102a560095481565b6102a560085481565b6103277f000000000000000000000000000000000000000000000000000000000000000081565b6102c66104a9366004611e49565b6116e6565b6102c66104bc366004611e49565b611781565b600454610327906001600160a01b031681565b6103277f000000000000000000000000000000000000000000000000000000000000000081565b6040516343c8eaab60e11b81526000600482018190523060248301529081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638791d5569060440160206040518083038186803b15801561056657600080fd5b505afa15801561057a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059e9190611ea8565b90506105b26105ab610cda565b8290611991565b905060006105d76127106105d16007548561199d90919063ffffffff16565b906119a9565b9250505090565b6004546001600160a01b031633146106115760405162461bcd60e51b815260040161060890611ff6565b60405180910390fd5b6203f48081111561068a5760405162461bcd60e51b815260206004820152603d60248201527f7769746864726177466565506572696f642063616e6e6f74206265206d6f726560448201527f207468616e204d41585f57495448445241575f4645455f504552494f440000006064820152608401610608565b600955565b6004546001600160a01b031633146106b95760405162461bcd60e51b815260040161060890611ff6565b606481111561071b5760405162461bcd60e51b815260206004820152602860248201527f63616c6c4665652063616e6e6f74206265206d6f7265207468616e204d41585f60448201526743414c4c5f46454560c01b6064820152608401610608565b600755565b333b1561073f5760405162461bcd60e51b815260040161060890611fc8565b33321461075e5760405162461bcd60e51b815260040161060890611f32565b336000908152600160205260409020816107b05760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b6044820152606401610608565b80548211156108015760405162461bcd60e51b815260206004820152601f60248201527f576974686472617720616d6f756e7420657863656564732062616c616e6365006044820152606401610608565b600061081b6002546105d185610815610eea565b9061199d565b825490915061082a90846119b5565b825560025461083990846119b5565b6002556000610846610cda565b90508181101561090c57600061085c83836119b5565b604051631058d28160e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631058d28190602401600060405180830381600087803b1580156108c157600080fd5b505af11580156108d5573d6000803e3d6000fd5b5050505060006108e3610cda565b905060006108f182856119b5565b905082811015610908576109058482611991565b94505b5050505b600954600184015461091d91611991565b42101561098c5760006109416127106105d16008548661199d90919063ffffffff16565b60055490915061097e906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836119c1565b61098883826119b5565b9250505b8254156109b6576109ac6002546105d16109a4610eea565b86549061199d565b60028401556109be565b600060028401555b4260038401556109f86001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846119c1565b604080518381526020810186905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56891015b60405180910390a250505050565b6004546001600160a01b03163314610a645760405162461bcd60e51b815260040161060890611ff6565b610a77600054600160a01b900460ff1690565b610aba5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610608565b610ac26119f1565b6040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b333b15610b0c5760405162461bcd60e51b815260040161060890611fc8565b333214610b2b5760405162461bcd60e51b815260040161060890611f32565b610b3e600054600160a01b900460ff1690565b15610b5b5760405162461bcd60e51b815260040161060890611f69565b604051631058d28160e01b8152600060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631058d28190602401600060405180830381600087803b158015610bbd57600080fd5b505af1158015610bd1573d6000803e3d6000fd5b505050506000610bdf610cda565b90506000610bfe6127106105d16006548561199d90919063ffffffff16565b600554909150610c3b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836119c1565b6000610c586127106105d16007548661199d90919063ffffffff16565b9050610c8e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836119c1565b610c96611a94565b42600355604080518381526020810183905233917f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954910160405180910390a2505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610d3c57600080fd5b505afa158015610d50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d749190611ea8565b905090565b6000546001600160a01b03163314610da35760405162461bcd60e51b815260040161060890611f93565b6001600160a01b038116610df25760405162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b6044820152606401610608565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03163314610e3e5760405162461bcd60e51b815260040161060890611ff6565b6101f4811115610eaf5760405162461bcd60e51b815260206004820152603660248201527f706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468604482015275616e204d41585f504552464f524d414e43455f46454560501b6064820152608401610608565b600655565b6000546001600160a01b03163314610ede5760405162461bcd60e51b815260040161060890611f93565b610ee86000611b23565b565b6040516393f1a40b60e01b81526000600482018190523060248301529081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393f1a40b90604401604080518083038186803b158015610f5457600080fd5b505afa158015610f68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8c9190611ec0565b506040516370a0823160e01b81523060048201529091506110339082906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610ff557600080fd5b505afa158015611009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102d9190611ea8565b90611991565b91505090565b60006002546000146110645761105f6002546105d1670de0b6b3a7640000610815610eea565b610d74565b50670de0b6b3a764000090565b6004546001600160a01b0316331461109b5760405162461bcd60e51b815260040161060890611ff6565b6110ae600054600160a01b900460ff1690565b156110cb5760405162461bcd60e51b815260040161060890611f69565b6110d3611b73565b6040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b333b1561111d5760405162461bcd60e51b815260040161060890611fc8565b33321461113c5760405162461bcd60e51b815260040161060890611f32565b33600090815260016020526040902054610ee890610720565b6040516343c8eaab60e11b81526000600482018190523060248301529081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638791d5569060440160206040518083038186803b1580156111c057600080fd5b505afa1580156111d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f89190611ea8565b90506110336105ab610cda565b6004546001600160a01b0316331461122f5760405162461bcd60e51b815260040161060890611ff6565b60648111156112995760405162461bcd60e51b815260206004820152603060248201527f77697468647261774665652063616e6e6f74206265206d6f7265207468616e2060448201526f4d41585f57495448445241575f46454560801b6064820152608401610608565b600855565b6112b1600054600160a01b900460ff1690565b156112ce5760405162461bcd60e51b815260040161060890611f69565b333b156112ed5760405162461bcd60e51b815260040161060890611fc8565b33321461130c5760405162461bcd60e51b815260040161060890611f32565b600081116113515760405162461bcd60e51b8152602060048201526012602482015271139bdd1a1a5b99c81d1bc819195c1bdcda5d60721b6044820152606401610608565b600061135b610eea565b90506113926001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611bde565b60006002546000146113be576113b7826105d16002548661199d90919063ffffffff16565b90506113c1565b50815b33600090815260016020526040902080546113dc9083611991565b81554260018201556002546113f19083611991565b600281905561140d906105d1611405610eea565b84549061199d565b6002820155426003820155611420611a94565b6040805185815260208101849052429181019190915233907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e90606001610a2c565b6004546001600160a01b0316331461148c5760405162461bcd60e51b815260040161060890611ff6565b604051632989754760e11b8152600060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635312ea8e90602401600060405180830381600087803b1580156114ee57600080fd5b505af1158015611502573d6000803e3d6000fd5b50505050565b6004546001600160a01b031633146115325760405162461bcd60e51b815260040161060890611ff6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614156115c25760405162461bcd60e51b815260206004820152602560248201527f546f6b656e2063616e6e6f742062652073616d65206173206465706f736974206044820152643a37b5b2b760d91b6064820152608401610608565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614156116525760405162461bcd60e51b815260206004820152602560248201527f546f6b656e2063616e6e6f742062652073616d652061732072656365697074206044820152643a37b5b2b760d91b6064820152608401610608565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561169457600080fd5b505afa1580156116a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cc9190611ea8565b90506116e26001600160a01b03831633836119c1565b5050565b6000546001600160a01b031633146117105760405162461bcd60e51b815260040161060890611f93565b6001600160a01b03811661175f5760405162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b6044820152606401610608565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146117ab5760405162461bcd60e51b815260040161060890611f93565b6001600160a01b0381166118105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610608565b61181981611b23565b50565b8015806118a55750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561186b57600080fd5b505afa15801561187f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a39190611ea8565b155b6119105760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610608565b6040516001600160a01b03831660248201526044810182905261197390849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c16565b505050565b60606119878484600085611ce8565b90505b9392505050565b600061198a828461201b565b600061198a8284612053565b600061198a8284612033565b600061198a8284612072565b6040516001600160a01b03831660248201526044810182905261197390849063a9059cbb60e01b9060640161193c565b611a04600054600160a01b900460ff1690565b611a475760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610608565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000611a9e610cda565b90508015611819576040516341441d3b60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906341441d3b90602401600060405180830381600087803b158015611b0857600080fd5b505af1158015611b1c573d6000803e3d6000fd5b5050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611b86600054600160a01b900460ff1690565b15611ba35760405162461bcd60e51b815260040161060890611f69565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a773390565b6040516001600160a01b03808516602483015283166044820152606481018290526115029085906323b872dd60e01b9060840161193c565b6000611c6b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119789092919063ffffffff16565b8051909150156119735780806020019051810190611c899190611e70565b6119735760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610608565b606082471015611d495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610608565b843b611d975760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610608565b600080866001600160a01b03168587604051611db39190611ee3565b60006040518083038185875af1925050503d8060008114611df0576040519150601f19603f3d011682016040523d82523d6000602084013e611df5565b606091505b5091509150611e05828286611e10565b979650505050505050565b60608315611e1f57508161198a565b825115611e2f5782518084602001fd5b8160405162461bcd60e51b81526004016106089190611eff565b600060208284031215611e5a578081fd5b81356001600160a01b038116811461198a578182fd5b600060208284031215611e81578081fd5b8151801515811461198a578182fd5b600060208284031215611ea1578081fd5b5035919050565b600060208284031215611eb9578081fd5b5051919050565b60008060408385031215611ed2578081fd5b505080516020909101519092909150565b60008251611ef5818460208701612089565b9190910192915050565b6000602082528251806020840152611f1e816040850160208701612089565b601f01601f19169190910160400192915050565b6020808252601a908201527f70726f787920636f6e7472616374206e6f7420616c6c6f776564000000000000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526014908201527318dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604082015260600190565b6020808252600b908201526a61646d696e3a207775743f60a81b604082015260600190565b6000821982111561202e5761202e6120b5565b500190565b60008261204e57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561206d5761206d6120b5565b500290565b600082821015612084576120846120b5565b500390565b60005b838110156120a457818101518382015260200161208c565b838111156115025750506000910152565b634e487b7160e01b600052601160045260246000fdfea264697066735822122085ba9d6728ca9dc4666daa510cab7f989551304dd616839799663328e78afde364736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "available()": {
        "details": "The contract puts 100% of the tokens to work."
      },
      "balanceOf()": {
        "details": "It includes tokens held by the contract and held in MasterChef"
      },
      "calculateHarvestReactRewards()": {
        "returns": {
          "_0": "Expected reward to collect in REACT"
        }
      },
      "calculateTotalPendingReactRewards()": {
        "returns": {
          "_0": "Returns total pending react rewards"
        }
      },
      "constructor": {
        "params": {
          "_admin": ": address of the admin",
          "_farm": ": MasterChef contract",
          "_receiptToken": ": Syrup token contract",
          "_token": ": React token contract",
          "_treasury": ": address of the treasury (collects fees)"
        }
      },
      "deposit(uint256)": {
        "details": "Only possible when contract not paused.",
        "params": {
          "_amount": ": number of tokens to deposit (in REACT)"
        }
      },
      "emergencyWithdraw()": {
        "details": "EMERGENCY ONLY. Only callable by the contract admin."
      },
      "harvest()": {
        "details": "Only possible when contract not paused."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Only possible when contract not paused."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAdmin(address)": {
        "details": "Only callable by the contract owner."
      },
      "setCallFee(uint256)": {
        "details": "Only callable by the contract admin."
      },
      "setPerformanceFee(uint256)": {
        "details": "Only callable by the contract admin."
      },
      "setTreasury(address)": {
        "details": "Only callable by the contract owner."
      },
      "setWithdrawFee(uint256)": {
        "details": "Only callable by the contract admin."
      },
      "setWithdrawFeePeriod(uint256)": {
        "details": "Only callable by the contract admin."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Only possible when contract is paused."
      },
      "withdraw(uint256)": {
        "params": {
          "_shares": ": Number of shares to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "available()": {
        "notice": "Custom logic for how much the vault allows to be borrowed"
      },
      "balanceOf()": {
        "notice": "Calculates the total underlying tokens"
      },
      "calculateHarvestReactRewards()": {
        "notice": "Calculates the expected harvest reward from third party"
      },
      "calculateTotalPendingReactRewards()": {
        "notice": "Calculates the total pending rewards that can be restaked"
      },
      "constructor": {
        "notice": "Constructor"
      },
      "deposit(uint256)": {
        "notice": "Deposits funds into the React Vault"
      },
      "emergencyWithdraw()": {
        "notice": "Withdraws from MasterChef to Vault without caring about rewards."
      },
      "getPricePerFullShare()": {
        "notice": "Calculates the price per share"
      },
      "harvest()": {
        "notice": "Reinvests REACT tokens into MasterChef"
      },
      "inCaseTokensGetStuck(address)": {
        "notice": "Withdraw unexpected tokens sent to the React Vault"
      },
      "pause()": {
        "notice": "Triggers stopped state"
      },
      "setAdmin(address)": {
        "notice": "Sets admin address"
      },
      "setCallFee(uint256)": {
        "notice": "Sets call fee"
      },
      "setPerformanceFee(uint256)": {
        "notice": "Sets performance fee"
      },
      "setTreasury(address)": {
        "notice": "Sets treasury address"
      },
      "setWithdrawFee(uint256)": {
        "notice": "Sets withdraw fee"
      },
      "setWithdrawFeePeriod(uint256)": {
        "notice": "Sets withdraw fee period"
      },
      "unpause()": {
        "notice": "Returns to normal state"
      },
      "withdraw(uint256)": {
        "notice": "Withdraws from funds from the React Vault"
      },
      "withdrawAll()": {
        "notice": "Withdraws all funds for a user"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 389,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 504,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 9136,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "userInfo",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(UserInfo)9122_storage)"
      },
      {
        "astId": 9138,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "totalShares",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 9140,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "lastHarvestedTime",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 9142,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "admin",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9144,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "treasury",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 9159,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "performanceFee",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 9162,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "callFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 9165,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "withdrawFee",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 9168,
        "contract": "contracts/ReactVault.sol:ReactVault",
        "label": "withdrawFeePeriod",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(UserInfo)9122_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ReactVault.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)9122_storage"
      },
      "t_struct(UserInfo)9122_storage": {
        "encoding": "inplace",
        "label": "struct ReactVault.UserInfo",
        "members": [
          {
            "astId": 9115,
            "contract": "contracts/ReactVault.sol:ReactVault",
            "label": "shares",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9117,
            "contract": "contracts/ReactVault.sol:ReactVault",
            "label": "lastDepositedTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 9119,
            "contract": "contracts/ReactVault.sol:ReactVault",
            "label": "reactAtLastUserAction",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9121,
            "contract": "contracts/ReactVault.sol:ReactVault",
            "label": "lastUserActionTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}